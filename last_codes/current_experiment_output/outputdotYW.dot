
/* Start of top-level graph */
digraph Workflow {
rankdir=TB

/* Title for graph */
fontname=Helvetica; fontsize=18; labelloc=t
label=PyPOFacetsMonolithicExperimentModeYW

/* Start of double cluster for drawing box around nodes in workflow */
subgraph cluster_workflow_box_outer { label=""; color=black; penwidth=2
subgraph cluster_workflow_box_inner { label=""; penwidth=0

/* Style for nodes representing atomic programs in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=1 fontname=Helvetica]

/* Nodes representing atomic programs in workflow */
ReadInputParameters
CalculateWaveLength
CalculateIncidentWavePolarization
ReadModelCoordinates
ReadFacetsModel
GenerateTransposeMatrix
GenerateCoordinatesPoints
CalculateEdgesAndNormalTriangles
AssembleGenerateOutputFile
CalculateGlobalAnglesAndDirections

/* Style for nodes representing composite programs (sub-workflows) in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=2 fontname=Helvetica]

/* Nodes representing composite programs (sub-workflows) in workflow */
CalculateRefsGeometryModel
CalculateSphericalCoordinateSystemRadialUnitVector
CalculateIncidentFieldInGlobalCartesianCoordinates

/* Style for nodes representing non-parameter data channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FFFFCC" peripheries=1 fontname=Helvetica]

/* Nodes for non-parameter data channels in workflow */
FileE0
FileR
InputDataFile
Frequency
InputModel
CoordinatesFile [shape=record rankdir=LR label="{<f0> CoordinatesFile |<f1> file\:\{input_model\}/coordinates.m}"];
FacetsFile [shape=record rankdir=LR label="{<f0> FacetsFile |<f1> file\:\{input_model\}/facets.m}"];
Facets
XPoints
YPoints
ZPoints
StartPhiAngle
StopPhiAngle
PhiIncrement
StartThetaAngle
ThetaIncrement
Node1
Node2
Node3
Points
CorrelationDistance
StandardDeviation
IncidentWavePolarization
StopThetaAngle
IPVerticalRotations
ITHorizontalRotations
U
V
W
UU
VV
WW
Et
Ep
SP
CP

/* Style for nodes representing parameter channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FCFCFC" peripheries=1 fontname=Helvetica]

/* Nodes representing parameter channels in workflow */

/* Edges representing connections between programs and channels */
ReadInputParameters -> Frequency
ReadInputParameters -> CorrelationDistance
ReadInputParameters -> StandardDeviation
ReadInputParameters -> IncidentWavePolarization
ReadInputParameters -> StartPhiAngle
ReadInputParameters -> StopPhiAngle
ReadInputParameters -> PhiIncrement
ReadInputParameters -> StartThetaAngle
ReadInputParameters -> StopThetaAngle
ReadInputParameters -> ThetaIncrement
InputDataFile -> ReadInputParameters
CalculateWaveLength -> WaveLength
Frequency -> CalculateWaveLength
CalculateIncidentWavePolarization -> Et
CalculateIncidentWavePolarization -> Ep
InputPolarization -> CalculateIncidentWavePolarization
ReadModelCoordinates -> XPoints
ReadModelCoordinates -> YPoints
ReadModelCoordinates -> ZPoints
InputModel -> ReadModelCoordinates
CoordinatesFile -> ReadModelCoordinates
ReadFacetsModel -> Facets
InputModel -> ReadFacetsModel
FacetsFile -> ReadFacetsModel
GenerateTransposeMatrix -> Node1
GenerateTransposeMatrix -> Node2
GenerateTransposeMatrix -> Node3
GenerateTransposeMatrix -> NTria
Facets -> GenerateTransposeMatrix
GenerateCoordinatesPoints -> Points
XPoints -> GenerateCoordinatesPoints
YPoints -> GenerateCoordinatesPoints
ZPoints -> GenerateCoordinatesPoints
CalculateRefsGeometryModel -> ITHorizontalRotations
CalculateRefsGeometryModel -> IPVerticalRotations
CalculateRefsGeometryModel -> PhiIncrement
CalculateRefsGeometryModel -> ThetaIncrement
StartPhiAngle -> CalculateRefsGeometryModel
StopPhiAngle -> CalculateRefsGeometryModel
PhiIncrement -> CalculateRefsGeometryModel
StartThetaAngle -> CalculateRefsGeometryModel
StopTethaAngle -> CalculateRefsGeometryModel
ThetaIncrement -> CalculateRefsGeometryModel
Radians -> CalculateRefsGeometryModel
CalculateEdgesAndNormalTriangles -> AreaI
CalculateEdgesAndNormalTriangles -> Beta
CalculateEdgesAndNormalTriangles -> Alpha
Node1 -> CalculateEdgesAndNormalTriangles
Node2 -> CalculateEdgesAndNormalTriangles
Node3 -> CalculateEdgesAndNormalTriangles
Points -> CalculateEdgesAndNormalTriangles
AssembleGenerateOutputFile -> FileR
AssembleGenerateOutputFile -> FileE0
Frequency -> AssembleGenerateOutputFile
CorrelationDistance -> AssembleGenerateOutputFile
StandardDeviation -> AssembleGenerateOutputFile
IncidentWavePolarization -> AssembleGenerateOutputFile
StartPhiAngle -> AssembleGenerateOutputFile
StopPhiAngle -> AssembleGenerateOutputFile
PhiIncrement -> AssembleGenerateOutputFile
StartThetaAngle -> AssembleGenerateOutputFile
StopThetaAngle -> AssembleGenerateOutputFile
ThetaIncrement -> AssembleGenerateOutputFile
CalculateGlobalAnglesAndDirections -> U
CalculateGlobalAnglesAndDirections -> V
CalculateGlobalAnglesAndDirections -> W
CalculateGlobalAnglesAndDirections -> UU
CalculateGlobalAnglesAndDirections -> VV
CalculateGlobalAnglesAndDirections -> WW
CalculateGlobalAnglesAndDirections -> SP
CalculateGlobalAnglesAndDirections -> CP
CalculateGlobalAnglesAndDirections -> D0
IPVerticalRotations -> CalculateGlobalAnglesAndDirections
ITHorizontalRotations -> CalculateGlobalAnglesAndDirections
StartPhiAngle -> CalculateGlobalAnglesAndDirections
PhiIncrement -> CalculateGlobalAnglesAndDirections
Radians -> CalculateGlobalAnglesAndDirections
StartThetaAngle -> CalculateGlobalAnglesAndDirections
ThetaIncrement -> CalculateGlobalAnglesAndDirections
Phi -> CalculateGlobalAnglesAndDirections
Theta -> CalculateGlobalAnglesAndDirections
CalculateSphericalCoordinateSystemRadialUnitVector -> FileR
U -> CalculateSphericalCoordinateSystemRadialUnitVector
V -> CalculateSphericalCoordinateSystemRadialUnitVector
W -> CalculateSphericalCoordinateSystemRadialUnitVector
FileR -> CalculateSphericalCoordinateSystemRadialUnitVector
CalculateIncidentFieldInGlobalCartesianCoordinates -> FileE0
UU -> CalculateIncidentFieldInGlobalCartesianCoordinates
VV -> CalculateIncidentFieldInGlobalCartesianCoordinates
WW -> CalculateIncidentFieldInGlobalCartesianCoordinates
Et -> CalculateIncidentFieldInGlobalCartesianCoordinates
Ep -> CalculateIncidentFieldInGlobalCartesianCoordinates
SP -> CalculateIncidentFieldInGlobalCartesianCoordinates
CP -> CalculateIncidentFieldInGlobalCartesianCoordinates
FileE0 -> CalculateIncidentFieldInGlobalCartesianCoordinates

/* End of double cluster for drawing box around nodes in workflow */
}}

/* Style for nodes representing workflow input ports */
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]

/* Nodes representing workflow input ports */
InputModel_input_port [label=""]
InputDataFile_input_port [label=""]
CoordinatesFile_input_port [label=""]
FacetsFile_input_port [label=""]

/* Style for nodes representing workflow output ports */
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]

/* Nodes representing workflow output ports */
FileE0_output_port [label=""]
FileR_output_port [label=""]

/* Edges from input ports to channels */
InputModel_input_port -> InputModel
InputDataFile_input_port -> InputDataFile
CoordinatesFile_input_port -> CoordinatesFile
FacetsFile_input_port -> FacetsFile

/* Edges from channels to output ports */
FileE0 -> FileE0_output_port
FileR -> FileR_output_port

/* End of top-level graph */
}
